plugins {
    id 'groovy-gradle-plugin'
    id "java"
}

group = 'com.example'
version = '0.0.1'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    gradlePluginPortal()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    queryDslVer = "5.0.0"
    mybatisVer = "3.0.3"
    opensearchVer = "2.9.0"
    osjavaVer = "2.6.0"
    gsonVer = "2.10.1"
    jsonSimpleVer = "1.1.1"
    p6spyVer = "1.9.0"
    ActuatorVer = "3.1.2"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.1.2'
    implementation 'io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:1.1.0'

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-aop"

    implementation "com.googlecode.json-simple:json-simple:${jsonSimpleVer}"
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6spyVer}"
    implementation "com.google.code.gson:gson:${gsonVer}"
    implementation "org.apache.commons:commons-lang3"

    //QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVer}:jakarta"
    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties["querydsl.version"]}:jakarta")
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.projectreactor.kafka:reactor-kafka'

    //Redis
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'

    //Actuator
    implementation "org.springframework.boot:spring-boot-starter-actuator:${ActuatorVer}"


    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "com.fasterxml.jackson.core:jackson-core"
    annotationProcessor "com.fasterxml.jackson.core:jackson-databind"
    annotationProcessor "com.fasterxml.jackson.core:jackson-annotations"

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Web Client
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.1'
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

compileJava {
    options.compilerArgs << "-Aquerydsl.generatedAnnotationClass=jakarta.annotation.Generated"
}

tasks.named("test") {
    useJUnitPlatform()
}

//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
//
//    // JPA
//    implementation 'org.springframework.data:spring-data-rest-core:3.7.2'
//
//    implementation 'javax.servlet:jstl:1.2'
//    implementation 'org.aspectj:aspectjweaver:1.9.7'
//    implementation 'org.projectlombok:lombok:1.18.22'
//    annotationProcessor 'org.projectlombok:lombok:1.18.22'
//    implementation 'com.google.gwt:gwt-user:2.8.2'
//    implementation 'com.github.gwtmaterialdesign:gwt-material-jquery:2.2'
//    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
//    implementation 'org.json:json:20160810'
//    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
//    implementation 'javax.servlet:jstl'
//    implementation 'org.jsoup:jsoup:1.15.2'
//    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
//    implementation 'io.jsonwebtoken:jjwt:0.9.1'
//    implementation 'commons-codec:commons-codec:1.9'
////    runtimeOnly 'com.h2database:h2:1.4.200'
////    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.5'
//    implementation 'mysql:mysql-connector-java:8.0.32'
//    implementation 'javax.xml.bind:jaxb-api:2.1'
//    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
//    implementation "com.google.code.gson:gson:2.10.1"
//
//    // ModelMapper(객체의 프로퍼티를 이름기반으로 다른 객체의 프로퍼티로 자동 매핑해주는 유틸리티)
//    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'
//
//    //opensearch
//    implementation "org.opensearch.client:opensearch-java:2.4.0"
//    implementation "org.opensearch.client:opensearch-rest-client:2.6.0"
//    implementation "org.opensearch:opensearch-core:2.6.0"
//    implementation "org.opensearch.client:opensearch-rest-high-level-client:2.6.0"
//
//    implementation 'com.warrenstrange:googleauth:1.1.1'
//    // QR Code - zxing
//    implementation group: 'com.google.zxing', name: 'javase', version: '3.5.0'
//    implementation group: 'com.google.zxing', name: 'core', version: '3.5.0'
//}

